#ifndef TRIQS_ARRAYS_EXPRESSION_MINMAX_H
#define TRIQS_ARRAYS_EXPRESSION_MINMAX_H
#include <algorithm>
#include <functional>
#include "./fold.hpp"

namespace triqs { namespace arrays {

 // fix for gcc <4.4
 template <class T> const T& mymax ( T  a, T b ) { return std::max(a,b); }
 template <class T> const T& mymin ( T a, T b ) { return std::min(a,b); }

 template<class A>
  typename A::value_type max_element(A const &a) { 
   return fold ( mymax<typename A::value_type const & >)  ( a, a[typename A::domain_type::index_value_type()]);// init = first element
  }

 template<class A>
  typename A::value_type min_element(A const &a) { 
   return fold ( mymin<typename A::value_type const & >)  ( a, a[typename A::domain_type::index_value_type()]);
  }


}}//namespace triqs::arrays 

#endif


